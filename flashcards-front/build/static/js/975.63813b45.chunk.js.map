{"version":3,"file":"static/js/975.63813b45.chunk.js","mappings":"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","sources":["components/RedirectIfAuth/RedirectIfAuth.js","components/CardsSet/CardsSet.jsx","components/confirmModal/ConfirmModal.js","pages/Library/Library.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RedirectIfAuth = ({ children }) => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem('jwtToken');\n        if (token) {\n            navigate('/library');\n        }\n    }, [navigate]);\n\n    return children;\n};\n\nexport default RedirectIfAuth;","import React from 'react'\nimport './CardsSet.scss'\nimport {useNavigate} from \"react-router-dom\";\n// import { ReactComponent as Icon } from '/img/link.svg';\n\n\nexport default function CardsSet({ id, title, author, count, isPublic, onDelete }) {\n    const navigate = useNavigate();\n\n    const handleCopyLink = () => {\n        const link = `${window.location.origin}/shared/${id}`;\n        navigator.clipboard.writeText(link).then(() => {\n            alert(\"Ссылка на набор скопирована в буфер обмена\");\n        }).catch((err) => {\n            console.error(\"Ошибка копирования:\", err);\n            alert(\"Не удалось скопировать ссылку\");\n        });\n    };\n\n    return (\n      <div className=\"cardsset\">\n          <div className=\"cardsset__icon\">\n              <img src=\"/img/cardsSet.svg\" alt=\"\" className=\"cardsset_icon__img\"/>\n          </div>\n          <div className=\"cardsset__content\">\n              <div className=\"cardsset__title__wrapper\">\n                  <button className=\"cardsset__content__title\" onClick={() => navigate(`/learn/${id}`)}>\n                      {title}\n                  </button>\n                  {isPublic && (\n                      <button className=\"cardsset__btn\" id=\"link-btn\" onClick={handleCopyLink}>\n                          <img src=\"/img/link1.svg\" alt=\"\"/>\n                      </button>\n                  )}\n              </div>\n              <div className=\"cardsset__row\">\n                  <div className=\"cardsset__row__item\">Кол-во карточек: {count}</div>\n                  <div className=\"cardsset__row__item\">Автор: {author}</div>\n              </div>\n          </div>\n          <div className=\"cardsset__column\">\n              <button className=\"cardsset__btn\" id=\"delete-btn\" onClick={() => onDelete(id)}>\n                  <img src=\"/img/deleteCard.svg\" alt=\"\" className=\"cardsset__img\"/>\n              </button>\n              <button className=\"cardsset__btn\" id=\"edit-btn\" onClick={() => navigate(`/edit/${id}`)}>\n                  <img src=\"/img/edit.svg\" alt=\"\" className=\"cardsset__img\"/>\n              </button>\n          </div>\n      </div>\n    );\n}\n\n","import React from 'react';\nimport './ConfirmModal.scss';\n\nexport default function ConfirmModal({ message, onConfirm, onCancel }) {\n    return (\n        <div className=\"confirmmodal\">\n            <div className=\"modal\">\n                <div className=\"modal__msg\">{message}</div>\n                <div className=\"modal__buttons\">\n                    <button className=\"modal__confirm\" onClick={onConfirm}>Удалить</button>\n                    <button className=\"modal__cancel\" onClick={onCancel}>Отмена</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/header\";\nimport SideBar from '../../components/SideBar/SideBar'\nimport \"./Library.scss\"\nimport CardsSet from \"../../components/CardsSet/CardsSet\";\nimport RedirectIfAuth from \"../../components/RedirectIfAuth/RedirectIfAuth\";\nimport {deleteDeck, getUserDecks} from \"../../services/deck\";\nimport ConfirmModal from \"../../components/confirmModal/ConfirmModal\";\n\n\nexport default function Library() {\n    const [decks, setDecks] = useState([]);\n    const [deckToDelete, setDeckToDelete] = useState(null);\n\n    useEffect(() => {\n        const fetchDecks = async () => {\n            try {\n                const result = await getUserDecks();\n                setDecks(result);\n            } catch (err) {\n                console.error('Ошибка загрузки наборов', err);\n            }\n        };\n\n        fetchDecks();\n    }, []);\n\n    // const handleDelete = async (id) => {\n    //     try {\n    //         await deleteDeck(id);\n    //         setDecks((prev) => prev.filter((deck) => deck.id !== id));\n    //     } catch (err) {\n    //         console.error('Ошибка при удалении набора:', err);\n    //         alert('Не удалось удалить набор.');\n    //     }\n    // };\n\n    const requestDelete = (id) => {\n        setDeckToDelete(id);\n    };\n\n    const confirmDelete = async () => {\n        try {\n            await deleteDeck(deckToDelete);\n            setDecks((prev) => prev.filter((deck) => deck.id !== deckToDelete));\n            setDeckToDelete(null);\n        } catch (err) {\n            console.error('Ошибка при удалении набора:', err);\n            alert('Не удалось удалить набор.');\n        }\n    };\n\n    const cancelDelete = () => {\n        setDeckToDelete(null);\n    };\n\n    return(\n        <div className=\"library\">\n            <Header />\n            <div className=\"library__content\">\n                <SideBar />\n                <div className=\"library__content__main\">\n                    <div className=\"library__title\">\n                        Мои наборы\n                    </div>\n                    {decks.length === 0 ? (\n                        <div>У вас пока нет наборов</div>\n                        ) : (\n                        decks.map((deck) => (\n                        <CardsSet\n                            id={deck.id}\n                            key={deck.id}\n                            title={deck.title}\n                            author={deck.author_name}\n                            count={deck.cards_count}\n                            isPublic={deck.is_public}\n                            onDelete={requestDelete}\n                        />\n                        ))\n                    )}\n                    {deckToDelete !== null && (\n                        <ConfirmModal\n                            message=\"Вы уверены, что хотите удалить набор?\"\n                            onConfirm={confirmDelete}\n                            onCancel={cancelDelete}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}"],"names":["_ref","children","navigate","useNavigate","useEffect","localStorage","getItem","CardsSet","id","title","author","count","isPublic","onDelete","_jsxs","className","_jsx","src","alt","onClick","handleCopyLink","link","window","location","origin","navigator","clipboard","writeText","then","alert","catch","err","console","error","ConfirmModal","message","onConfirm","onCancel","Library","decks","setDecks","useState","deckToDelete","setDeckToDelete","async","result","getUserDecks","fetchDecks","requestDelete","Header","SideBar","length","map","deck","author_name","cards_count","is_public","deleteDeck","prev","filter","cancelDelete"],"sourceRoot":""}